import numpy as np

import pybullet as p
import time
import gym, gym.utils.seeding
import math

from my_pybullet_envs.inmoov_shadow_hand import InmoovShadowHand

import os
import inspect
currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))

Traj = [[ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.],
[-0.01109587, 0.00853604, -0.00930493, -0.00154651, -0.00402582, 0.00332282, 0.00984393, -1.0533695,  0.81035606, -0.88334944, -0.1468154, -0.3821846, 0.31544643, 0.93451781, 0.02106739, 1.],
[-0.28142909, 0.13287289, -0.22060106, -0.15989818, -0.12374688, 0.0644147,
 0.13134642, -5.30498903, 2.11410234, -4.0864303, -3.57768696, -2.43370846,
 1.12146199, 1.92327538, 0.08503239, 1.],
[-0.31711221, 0.14699525, -0.24806974, -0.18410401, -0.14014211, 0.07193479,
 0.14301815, -5.63127171, 2.21415594, -4.33224482, -3.84098286, -2.59114887
, 1.18331816, 1.65390905, 0.00652565, 1.],
[-0.37071074, 0.16980463, -0.29307915, -0.22435413, -0.16714174, 0.08418859
, 0.15744151, -5.1333584,  2.36683955, -4.70736225, -4.24277718, -2.83140579
, 1.27771181, 1.24285113, 0.00995827, 1.],
[-0.43487499, 0.19870244, -0.35938357, -0.28468647, -0.20715413, 0.10211886
, 0.17036908, -4.46485649, 1.95593151, -5.21099755, -4.78222908, -3.15397643
, 1.40444539, 0.69096188, 0.01337004, 1.],
[ -4.35550062e-01,  1.98998070e-01, -3.60171573e-01, -2.85410606e-01
, -2.07631685e-01,  1.02331499e-01,  1.70473171e-01, -4.45729020e+00
,  1.95128074e+00, -5.20365874e+00, -4.78833474e+00, -3.15762737e+00
,  1.40587979e+00,  6.84715447e-01,  1.51325688e-04,  1.00000000e+00],
[ -4.46913905e-01,  2.03943254e-01, -3.73471328e-01, -2.97933211e-01
, -2.15881311e-01,  1.05927922e-01,  1.72106422e-01, -4.32793850e+00
,  1.87177213e+00, -5.07819584e+00, -4.89271593e+00, -3.22004314e+00
,  1.37446468e+00,  5.77927694e-01,  2.58703415e-03,  1.00000000e+00],
[ -4.60777782e-01,  2.09890633e-01, -3.89792745e-01, -3.14122580e-01
, -2.26243122e-01,  1.10350716e-01,  1.73773303e-01, -4.16469255e+00
,  1.77142975e+00, -4.91985769e+00, -5.02444829e+00, -3.12731887e+00
,  1.33481781e+00,  4.43158170e-01,  3.26491897e-03,  1.00000000e+00],
[-0.62627117, 0.27098661, -0.59941907, -0.61403706, -0.35743617, 0.17530051
, 0.11215021, -1.41724091, 0.28927909, -2.15063734, -5.09137957, -1.29769674
, 0.85587652, -2.52164592, 0.05929608, 1.],
[-0.53693192, 0.17535432, -0.58145177, -1.02816041, -0.33326575, 0.22049331,
 -0.38858924, 3.20741999, -2.20555798, 2.51066583, -3.2068202,  1.78202332
, 0.04969635, -7.51216634, 0.09981041, 1.],
[ -5.17295721e-01,  1.61970048e-01, -5.65901269e-01, -1.04666838e+00
, -3.22267824e-01,  2.20645879e-01, -4.31845748e-01,  3.47954136e+00
, -2.35235761e+00,  2.78494328e+00, -3.09593015e+00,  1.96323826e+00
,  2.25960595e-03, -7.21851729e+00,  5.87298094e-03,  1.00000000e+00],
[-0.49052675, 0.145178,  -0.54421731, -1.06886917, -0.30703737, 0.22044517,
 -0.48344868, 3.81940571, -2.2262356,  3.12750045, -2.95743469, 2.18956556,
 -0.05698623, -6.85176609, 0.00733502, 1.],
[ -4.86984579e-01,  1.43132161e-01, -5.41313101e-01, -1.07158864e+00
, -3.05025442e-01,  2.20389177e-01, -4.89746484e-01,  3.86213783e+00
, -2.21037792e+00,  3.17057115e+00, -2.94002126e+00,  2.17349359e+00
, -6.44353783e-02, -6.80565340e+00,  9.22253715e-04,  1.00000000e+00],
[-0.43053628, 0.11482047, -0.50079981, -1.10961054, -0.27723364, 0.2187799,
 -0.57718568, 4.48855335, -1.97791816, 2.82277159, -2.68475557, 1.93789246,
 -0.17363339, -6.12968179, 0.01351943, 1.],
[ -4.09637435e-01,  1.05608237e-01, -4.87666058e-01, -1.12216530e+00
, -2.68214392e-01,  2.17862781e-01, -6.05772082e-01,  4.30013240e+00
, -1.89614370e+00,  2.70042302e+00, -2.59495848e+00,  1.85501295e+00
, -2.12046952e-01, -5.89188921e+00,  4.75585166e-03,  1.00000000e+00],
[ -1.76335583e-01,  1.05845221e-03, -3.46301291e-01, -1.29353319e+00
, -1.69614821e-01,  2.10772305e-01, -9.51495442e-01, -6.98412061e-02
,  4.19220996e-04, -1.37159497e-01, -5.12329482e-01, -6.71793148e-02
,  8.34805529e-02, -3.76858647e-01,  1.10300611e-01,  1.00000000e+00],
[ -1.76693400e-01,  1.06060000e-03, -3.47004000e-01, -1.29615800e+00
, -1.69959000e-01,  2.11200000e-01, -9.53426200e-01,  0.00000000e+00
,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00
,  0.00000000e+00,  0.00000000e+00,  1.02465896e-02,  1.00000000e+00]]

# [-0.1766934, 0.0010606, -0.347004, -1.296158, -0.169959, 0.2112, -0.9534262]

physicsClient = p.connect(p.GUI)

p.setTimeStep(1. / 480.)
# p.setGravity(0, 0, -5)

cylinderId = p.loadURDF(os.path.join(currentdir, 'my_pybullet_envs/assets/cylinder.urdf'), [0., 0., 0.1], useFixedBase=1)  # 0.2/2
p.changeDynamics(cylinderId, -1, lateralFriction=3.0)
floorId = p.loadURDF(os.path.join(currentdir, 'my_pybullet_envs/assets/tabletop.urdf'), [0.1, 0, -0.05], useFixedBase=1)
p.changeDynamics(floorId, -1, lateralFriction=3.0)

a = InmoovShadowHand()
for ind in range(len(a.armDofs)):
    p.resetJointState(a.robotId, a.armDofs[ind], 0.0, 0.0)
for ind in range(len(a.activeFinDofs)):
    p.resetJointState(a.robotId, a.activeFinDofs[ind], a.initFinPos[ind], 0.0)

l = 200

for ind in range(len(Traj)-1):
    c_wp = Traj[ind]
    n_wp = Traj[ind+1]

    assert len(c_wp) == 16
    c_armq = np.array(c_wp[:7])
    n_armq = np.array(n_wp[:7])
    # armdq = wp[7:14]
    for t in range(l):
        armq = c_armq * (1. - t / l) + n_armq * (t / l)
        for ji, i in enumerate(a.armDofs):
            # p.resetJointState(a.robotId, i, armq[ji])
            p.setJointMotorControl2(bodyIndex=a.robotId,
                                    jointIndex=i,
                                    controlMode=p.POSITION_CONTROL,
                                    targetPosition=armq[ji],
                                    targetVelocity=0.,
                                    force=3000,  # TODO wrist force larger
                                    positionGain=0.1,
                                    velocityGain=1)
        p.stepSimulation()
        p.setTimeStep(1. / 480.)


input("press enter")


p.disconnect()


